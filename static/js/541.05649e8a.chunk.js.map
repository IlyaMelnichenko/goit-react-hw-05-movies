{"version":3,"file":"static/js/541.05649e8a.chunk.js","mappings":"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","sources":["components/Cast/Cast.js","components/Cast/Styledcast.js","fetch.js"],"sourcesContent":["import { getCast } from 'fetch';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { StyledLi, StyledUl } from './Styledcast';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const { id } = useParams();\n  useEffect(() => {\n    async function fetchCast() {\n      try {\n        const data = await getCast(id);\n        if (data.cast.length !== 0) {\n          setCast(data.cast);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchCast();\n  }, [id]);\n\n  return (\n    <>\n      {cast ? (\n        <StyledUl>\n          {cast.map(actor => (\n            <StyledLi key={actor.id}>\n              <img\n                src={`http://image.tmdb.org/t/p/w300${actor.profile_path}`}\n                alt=\"\"\n                width='250px'\n              />\n              <p>{actor.name}</p>\n              <p>character:{actor.character}</p>\n            </StyledLi>\n          ))}\n        </StyledUl>\n      ) : (\n        <div>нема</div>\n      )}\n    </>\n  );\n};\nexport default Cast;","import styled from 'styled-components';\n\n\nexport const StyledUl = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\ngap:20px;\nwidth:100%;\npadding: 0px;\nmargin:auto 0px;\nlist-style: none;\njustify-content: center;\n\n`\nexport const StyledLi =styled.li`\nwidth: calc((100% - 40px) / 3);\nbackground-color: #404bbf;\nborder-radius:15px;\ntext-align: center;\n`","import axios from 'axios';\nconst API_KEY = 'e3a5006031fb15b51def9b2796c1eb21';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getMovies = async () => {\n  const response = await axios(`/movie/top_rated?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMoviesByID = async id => {\n  const response = await axios(`/movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getReviews = async id => {\n  const response = await axios(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getCast = async id => {\n  const response = await axios(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data;\n};\nexport const getMovieByQuery = async query => {\n  const response = await axios(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data;\n};\n"],"names":["_useState","useState","_useState2","_slicedToArray","cast","setCast","id","useParams","useEffect","_fetchCast","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","getCast","sent","length","t0","console","log","stop","apply","arguments","fetchCast","_jsx","_Fragment","children","StyledUl","map","actor","_jsxs","StyledLi","src","concat","profile_path","alt","width","name","character","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","API_KEY","axios","getMovies","_ref","response","abrupt","getMoviesByID","_ref2","_callee2","_context2","_x","getReviews","_ref3","_callee3","_context3","_x2","_ref4","_callee4","_context4","_x3","getMovieByQuery","_ref5","_callee5","query","_context5","_x4"],"sourceRoot":""}